<!DOCTYPE html>
<html>
    <head>
    	<title>AIEN14-Project-Team3</title>

    	<!-- Bootstrap core CSS -->
        <link href="../css/bootstrap.css" rel="stylesheet">
        <link rel="stylesheet" href="../css/highlight/styles/default.css">
        <script src="../css/highlight/highlight.pack.js"></script>
        <script>hljs.initHighlightingOnLoad();</script>
    	<script src="https://code.jquery.com/jquery-1.11.0.min.js"></script>
		<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    	<style type="text/css">
			body {
			    position: relative;
			    min-height: 2000px;
				background-color: #FFE4B5;
			}
			.calibration_des > p{
				font-size:x-large;
			}
		</style>
    </head>
    <body>
		<div class="calibration_des">
			<p>1. 將目光注視游標位置，點擊滑鼠左鍵進行校正。</p>
			<p>2. 試著將游標移往螢幕各角落處，重複步驟1.。過程中請保持頭部穩定。</p>
			<p>3. 放開滑鼠，若注視點已準確顯示，即可按下"Esc"鍵使用隨機影片體驗，或"/"鍵輸入特定影片編號。
			</p>
			<h5 class="video_val" id="video_val" value="<%= video_id %>"><%= video_id %></h5>
		</div>
		<script type="text/javascript" src="../js/searchgazer0.js"></script>
    	<canvas id="myCanvas"></canvas>
        <script>
		window.onload = function() {
			window.localStorage.clear();
		    webgazer.setRegression('ridge') /* currently must set regression and tracker */
		    .setTracker('clmtrackr')
		    .setGazeListener(function(data, clock) {
				// collisionEyeListener(data, clock);
		     //   console.log(data); /* data is an object containing an x and y key which are the x and y prediction coordinates (no bounds limiting) */
		     //   console.log(clock); /* elapsed time in milliseconds since webgazer.begin() was called */
		    })
		    .begin()
		    .showPredictionPoints(true); /* shows a square every 100 milliseconds where current prediction is */
		    
		    var width = 480;
		    var height = 360;
		    var topDist = '0px';
		    var leftDist = '1430px';
		    
		    var setup = function() {
		        var video = document.getElementById('webgazerVideoFeed');
		        video.style.display = 'block';
		        video.style.position = 'absolute';
		        video.style.top = topDist;
		        video.style.left = leftDist;
		        video.width = width;
		        video.height = height;
		        video.style.margin = '0px';

		        webgazer.params.imgWidth = width;
		        webgazer.params.imgHeight = height;

				var overlay = document.createElement('canvas');				// changed 11/8 start 
		        overlay.id = 'overlay';
		        overlay.style.position = 'absolute';
		        overlay.width = width;
		        overlay.height = height;
		        overlay.style.top = topDist;
		        overlay.style.left = leftDist;
		        overlay.style.margin = '0px';

		        document.body.appendChild(overlay);

		        var cl = webgazer.getTracker().clm;

		        function drawLoop() {
		            requestAnimFrame(drawLoop);
		            overlay.getContext('2d').clearRect(0,0,width,height);
		            if (cl.getCurrentPosition()) {
		                cl.draw(overlay);
		            }
		        }
		        drawLoop();						// end
		    };

		    function checkIfReady() {
		        if (webgazer.isReady()) {
		            setup();
		        } else {
		            setTimeout(checkIfReady, 100);
		        }
		    }
		    setTimeout(checkIfReady,100);

	        window.onbeforeunload = function() {
		        webgazer.end();
		    };
		};

		const v= document.getElementById('video_val');
		$('#video_val').hide()
		console.log(v.textContent);
		console.log(parseInt($('h5').attr('value')))
		
		
		// console.log(videoval)
		function ReadytoShow(event) {
			if(event.keyCode==0x1B){
				window.location.href='video';
			}else if(event.keyCode==0xBF){
				swal("輸入指定的影片ID："+ v.textContent, {
					content: "input",
				})
				.then((value) => {
					if (value !== "" && value !== null){
						window.location.href=`videos/${value}`;
					}
				});

			}
		}
		document.onkeydown = ReadytoShow;
		// var webgazerCanvas = null;
		// var collisionEyeListener = async function(data, clock) {			// TODO changed 11/8
		// 	if(!data)
		// 	return;

		// 	// nodes[0].px = data.x;
		// 	// nodes[0].py = data.y;
		// 	// force.resume();

		// 	if (!webgazerCanvas) {
		// 	webgazerCanvas = webgazer.getVideoElementCanvas();
		// 	}

		// 	await webgazer.getTracker().getEyePatches(webgazerCanvas, webgazerCanvas.width, webgazerCanvas.height);
		// 	var fmPositions = await webgazer.getTracker().getPositions();

		// 	var whr = webgazer.getVideoPreviewToCameraResolutionRatio();

		// 	var line = d3.select('#eyeline1')
		// 			.attr("x1",data.x)
		// 			.attr("y1",data.y)
		// 			.attr("x2",previewWidth - fmPositions[145][0] * whr[0])
		// 			.attr("y2",fmPositions[145][1] * whr[1]);

		// 	var line = d3.select("#eyeline2")
		// 			.attr("x1",data.x)
		// 			.attr("y1",data.y)
		// 			.attr("x2",previewWidth - fmPositions[374][0] * whr[0])
		// 			.attr("y2",fmPositions[374][1] * whr[1]);

		// 	var dot = d3.select("#predictionSquare")
		// 			.attr("x",data.x)
		// 			.attr("y",data.y);
		// };
        </script>
	</body>
</html>
